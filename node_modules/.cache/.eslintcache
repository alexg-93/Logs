[{"/Users/alex/Documents/web/react/it-logger/src/index.js":"1","/Users/alex/Documents/web/react/it-logger/src/App.js":"2","/Users/alex/Documents/web/react/it-logger/src/components/layout/SearchBar.js":"3","/Users/alex/Documents/web/react/it-logger/src/components/logs/Logs.js":"4","/Users/alex/Documents/web/react/it-logger/src/components/logs/LogItem.js":"5","/Users/alex/Documents/web/react/it-logger/src/components/layout/PreLoader.js":"6","/Users/alex/Documents/web/react/it-logger/src/components/layout/AddBtn.js":"7","/Users/alex/Documents/web/react/it-logger/src/components/logs/AddLogModal.js":"8","/Users/alex/Documents/web/react/it-logger/src/components/logs/EditLogModal.js":"9","/Users/alex/Documents/web/react/it-logger/src/components/techs/AddTechModal.js":"10","/Users/alex/Documents/web/react/it-logger/src/components/techs/TechListModal.js":"11","/Users/alex/Documents/web/react/it-logger/src/components/techs/TechItem.js":"12","/Users/alex/Documents/web/react/it-logger/src/redux/store.js":"13","/Users/alex/Documents/web/react/it-logger/src/redux/reducers/rootReducer.js":"14","/Users/alex/Documents/web/react/it-logger/src/redux/reducers/logReducer.js":"15","/Users/alex/Documents/web/react/it-logger/src/redux/actions/types.js":"16","/Users/alex/Documents/web/react/it-logger/src/redux/actions/logActions.js":"17","/Users/alex/Documents/web/react/it-logger/src/redux/reducers/techReducer.js":"18","/Users/alex/Documents/web/react/it-logger/src/redux/actions/techActions.js":"19","/Users/alex/Documents/web/react/it-logger/src/components/techs/TechSelectOptions.js":"20","/Users/alex/Documents/web/react/it-logger/src/components/techs/EditTechModal.js":"21","/Users/alex/Documents/web/react/it-logger/src/components/techs/techCard.js":"22","/Users/alex/Documents/web/react/it-logger/src/components/techs/TechCard.js":"23","/Users/alex/Documents/web/react/it-logger/src/components/layout/SideNav.js":"24","/Users/alex/Documents/web/react/it-logger/src/pages/Home.js":"25","/Users/alex/Documents/web/react/it-logger/src/pages/CompletedLogs.js":"26","/Users/alex/Documents/web/react/it-logger/src/components/layout/MobileNav.js":"27","/Users/alex/Documents/web/react/it-logger/src/components/logs/CompletedLogs.js":"28","/Users/alex/Documents/web/react/it-logger/src/components/logs/CompletedLogItem.js":"29","/Users/alex/Documents/web/react/it-logger/src/pages/Techs.js":"30"},{"size":221,"mtime":1627900978000,"results":"31","hashOfConfig":"32"},{"size":933,"mtime":1627900978000,"results":"33","hashOfConfig":"32"},{"size":1130,"mtime":1627900978000,"results":"34","hashOfConfig":"32"},{"size":964,"mtime":1627900978000,"results":"35","hashOfConfig":"32"},{"size":2444,"mtime":1627900978000,"results":"36","hashOfConfig":"32"},{"size":218,"mtime":1627900978000,"results":"37","hashOfConfig":"32"},{"size":955,"mtime":1627900978000,"results":"38","hashOfConfig":"32"},{"size":2968,"mtime":1627900978000,"results":"39","hashOfConfig":"32"},{"size":3271,"mtime":1627900978000,"results":"40","hashOfConfig":"32"},{"size":2158,"mtime":1627900978000,"results":"41","hashOfConfig":"32"},{"size":1876,"mtime":1627900978000,"results":"42","hashOfConfig":"32"},{"size":1550,"mtime":1627900978000,"results":"43","hashOfConfig":"32"},{"size":394,"mtime":1627900978000,"results":"44","hashOfConfig":"32"},{"size":199,"mtime":1627900978000,"results":"45","hashOfConfig":"32"},{"size":1755,"mtime":1627900978000,"results":"46","hashOfConfig":"32"},{"size":779,"mtime":1627900978000,"results":"47","hashOfConfig":"32"},{"size":4230,"mtime":1627969327818,"results":"48","hashOfConfig":"32"},{"size":1483,"mtime":1627900978000,"results":"49","hashOfConfig":"32"},{"size":3588,"mtime":1627968782192,"results":"50","hashOfConfig":"32"},{"size":849,"mtime":1627900978000,"results":"51","hashOfConfig":"32"},{"size":2563,"mtime":1627900978000,"results":"52","hashOfConfig":"32"},{"size":1738,"mtime":1627635842088,"results":"53","hashOfConfig":"32"},{"size":1695,"mtime":1627900978000,"results":"54","hashOfConfig":"32"},{"size":1414,"mtime":1627900978000,"results":"55","hashOfConfig":"32"},{"size":1066,"mtime":1627900978000,"results":"56","hashOfConfig":"32"},{"size":391,"mtime":1627900978000,"results":"57","hashOfConfig":"32"},{"size":1095,"mtime":1627900978000,"results":"58","hashOfConfig":"32"},{"size":1067,"mtime":1627900978000,"results":"59","hashOfConfig":"32"},{"size":1182,"mtime":1627900978000,"results":"60","hashOfConfig":"32"},{"size":4824,"mtime":1627900978000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ldakz7",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},"/Users/alex/Documents/web/react/it-logger/src/index.js",[],"/Users/alex/Documents/web/react/it-logger/src/App.js",["133"],"\nimport './App.css';\nimport React , {useEffect , Fragment} from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js'\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\nimport Home from './pages/Home'\n\nimport Techs from './pages/Techs'\nimport CompletedLogs from './pages/CompletedLogs'\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst App = () => {\n\n  \n\n  useEffect(() => {\n    \n    //Init Materialize JS\n    M.AutoInit();\n  \n    \n  },[])\n\n\n\n\n\n\n  return (\n <Router>\n    <Provider store={store}>\n    <Fragment>\n    \n    <Switch>\n      <Route exact path='/' component={Home}/>\n      <Route exact path='/techs' component={Techs}/>\n      <Route exact path='/completedlogs' component={CompletedLogs}/>\n    </Switch>\n      \n    </Fragment>\n    </Provider>\n  </Router>\n    \n  )\n}\n\nexport default App\n","/Users/alex/Documents/web/react/it-logger/src/components/layout/SearchBar.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/logs/Logs.js",["134","135"],"import React, { useState, useEffect } from \"react\";\nimport LogItem from './LogItem'\nimport PreLoader from '../layout/PreLoader'\nimport  {connect} from 'react-redux'\nimport {getLogs} from '../../redux/actions/logActions'\n\nconst Logs = ({log:{logs,loading},getLogs}) => {\n\n \n  useEffect(() => {\n    getLogs();\n  }, []);\n\n  \n\n  if (loading || logs ===null){\n    return <PreLoader/>;\n  }\n\n  return (\n    <ul className=\"collection with-header\" style={{display:'grid',marginTop:'7px',maxWidth:500,margin:'auto'}}>\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n       {!loading && logs.length === 0 ? <p className=\"center\">No logs to show..</p>\n       :\n       logs.map( log => (\n          \n        <LogItem key={log.id} log={log}/>\n       )\n        \n       \n       )\n\n       }\n    </ul>\n  );\n};\n\n\nconst mapStateToProps = state =>({\n  log: state.log,\n})\n\nexport default connect(mapStateToProps,{\n  getLogs\n})(Logs);\n","/Users/alex/Documents/web/react/it-logger/src/components/logs/LogItem.js",["136"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\nimport {connect} from 'react-redux'\nimport {deleteLog} from '../../redux/actions/logActions'\nimport {setCurrentLog} from '../../redux/actions/logActions'\nimport {addCompletedLog} from '../../redux/actions/logActions'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport M from 'materialize-css/dist/js/materialize'\n\n\nconst LogItem = ({log,deleteLog,setCurrentLog,addCompletedLog}) => {\n\n    const {id,message,tech,date} = log\n   \n   \n    const handleDelete=()=>{\n        deleteLog(id)\n        M.toast({html:`Log Deleted`})\n    }\n\n\n    const handleCurrentLog=()=>{\n        setCurrentLog(log)\n    }\n\n    const handleCompletedLog=()=>{\n        //add the log to completed logs\n        setCurrentLog(log)\n        addCompletedLog(log)\n        //delete checked log\n       deleteLog(id)\n    }\n\n     // const handleCompletedLog=()=>{\n    //     //add the log to completed logs\n    //     addCompletedLog(log)\n    //     //delete checked log\n    //     deleteLog(id)\n    // }\n   \n    return (\n       <li className=\"collection-item\">\n            <div className=\"center\">\n                <a href=\"#edit-log-modal\" className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`} onClick={handleCurrentLog}>{message}</a>\n                <br/>\n                <span className=\"grey-text\">\n                    <span className=\"black-text\">ID #{id} </span>\n                    last updated by {\" \"}\n                    <span className=\"black-text\">{tech}</span> \n                   <br/> {\" \"} <span style={{marginLeft:50}}>on</span> {\" \"} \n                     <Moment format='MMMM Do YYYY, h:mm:ss a'>{date}</Moment>\n                </span>\n                <a href=\"#!\" className=\"secondary-content\" onClick={handleDelete}>\n                    <i className='material-icons grey-text small'>delete_forever</i>\n                   \n                </a>\n            \n                <a href=\"#!\" className=\"secondary-content\" onClick={handleCompletedLog}>\n                <i className='material-icons grey-text small'>check</i>  \n                   \n                </a>\n                \n            </div>\n       </li>\n    )\n}\n\nLogItem.propTypes = {\n    log: PropTypes.object.isRequired,\n    deleteLog:PropTypes.func.isRequired,\n    setCurrentLog: PropTypes.func.isRequired,\n   \n    \n}\n\nexport default connect(null,{deleteLog,setCurrentLog,addCompletedLog})(LogItem)\n","/Users/alex/Documents/web/react/it-logger/src/components/layout/PreLoader.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/layout/AddBtn.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/logs/AddLogModal.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/logs/EditLogModal.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/techs/AddTechModal.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/techs/TechListModal.js",["137"],"import React, { useEffect,useRef } from \"react\";\nimport TechItem from \"./TechItem\";\nimport { connect } from \"react-redux\";\nimport { getTechs } from \"../../redux/actions/techActions\";\nimport { searchTechs } from \"../../redux/actions/techActions\";\nimport PropTypes from \"prop-types\";\n\nconst TechListModal = ({ tech: { techs, loading }, getTechs, searchTechs }) => {\n\n  useEffect(() => {\n    getTechs();\n  }, []);\n\nconst text = useRef('')\n\nconst handleSearchTechs= () =>{\n\n  searchTechs(text.current.value)\n}\n\n\n  return (\n   <>\n    \n\n    <div id=\"tech-list-modal\" className=\"modal\">\n\n    <nav style={{marginBottom:'30px'}} className=\"blue\">\n    <div className=\"nav-wrapper\">\n      <form>\n        <div className=\"input-field\">\n          <input id=\"search\" type=\"search\" placeholder='Search for techs..' ref={text} onChange={handleSearchTechs}/>\n          <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\n          <i className=\"material-icons\">close</i>\n        </div>\n      </form>\n    </div>\n  </nav>\n\n\n      <div className=\"modal-content center\">\n        <h4>Techs list</h4>\n        <ul className=\"collection\">\n          {(!loading && techs === null) || techs.length === 0 ? (\n            <p className=\"center\">No techs to show..</p>\n          ) : (\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)\n          )}\n        </ul>\n      </div>\n\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect red btn\">\n          Close\n        </a>\n      </div>\n    </div>\n  </>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n  searchTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs,searchTechs })(TechListModal);\n","/Users/alex/Documents/web/react/it-logger/src/components/techs/TechItem.js",[],"/Users/alex/Documents/web/react/it-logger/src/redux/store.js",[],"/Users/alex/Documents/web/react/it-logger/src/redux/reducers/rootReducer.js",[],"/Users/alex/Documents/web/react/it-logger/src/redux/reducers/logReducer.js",[],"/Users/alex/Documents/web/react/it-logger/src/redux/actions/types.js",[],"/Users/alex/Documents/web/react/it-logger/src/redux/actions/logActions.js",["138"],"import { SEARCH_LOGS,GET_LOGS, SET_LOADING, LOGS_ERROR  , ADD_LOG,DELETE_LOG, SET_CURRENT, CLEAR_CURRENT,UPDATE_LOG} from \"./types\";\nimport M from 'materialize-css/dist/js/materialize'\n\nconst JSON_API = 'https://my-json-server.typicode.com/alexg-93/logsdb/'\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n\n\n    try {\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/logs`);\n        const data = await res.json();\n\n        dispatch({\n            type:GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n    \n};\n\n//Add new log to db\nexport const addLog = (log) => async dispatch=>{\n\n    try {\n\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/logs` , {\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n\n        dispatch({\n            type:ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n}\n\n//Delete logs from server db\nexport const deleteLog = (id) => async dispatch=>{\n \n    try {\n\n        setLoading(); //true\n    \n        await fetch(`${JSON_API}/logs/${id}`,{\n            method: 'DELETE'\n        });\n     \n        dispatch({\n            type:DELETE_LOG,\n            payload: id\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n\n}\n\n\n//Update log on server\nexport const updateLog = (log) => async dispatch=>{\n \n    try {\n\n        setLoading(); //true\n    \n        const res = await fetch(`${JSON_API}/logs/${log.id}`,{\n            method: 'PATCH',\n            body: JSON.stringify(log),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const data = await res.json();\n       \n\n        dispatch({\n            type:UPDATE_LOG,\n            payload: data\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n\n}\n\n\n// Get logs from server\nexport const searchLogs = (text) => async dispatch => {\n\n    try {\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/logs?q=${text}`);\n        const data = await res.json();\n       \n        dispatch({\n            type:SEARCH_LOGS,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n    \n};\n\n\n// Set current log\nexport const setCurrentLog = (log) => {\n  return {\n      type:SET_CURRENT,\n      payload: log\n  }\n}\n\n// clear current log\nexport const clearCurrentLog = () => {\n    return {\n        type:CLEAR_CURRENT,\n        payload: null\n    }\n  }\n  \n\n//Set loading to true\nexport const setLoading = () => {\n   return {\n       type:SET_LOADING\n   }\n};\n\n\n\n\n\n//Add completed logs to db\nexport const addCompletedLog = (log) => async dispatch=>{\n\n    try {\n\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/completedlogs` , {\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n\n        dispatch({\n            type:'ADD_COMPLETED_LOG',\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err\n        })\n    }\n   \n}\n\n// Get logs from server\nexport const getCompletedLogs = () => async dispatch => {\n\n    try {\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/completedlogs`);\n        const data = await res.json();\n        console.log(data)\n        dispatch({\n            type:'GET_COMPLETED_LOGS',\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err\n        })\n    }\n   \n    \n};\n\n","/Users/alex/Documents/web/react/it-logger/src/redux/reducers/techReducer.js",[],"/Users/alex/Documents/web/react/it-logger/src/redux/actions/techActions.js",["139"],"import {ADD_TECH,GET_TECHS,TECHS_ERROR,DELETE_TECH,SET_LOADING,UPDATE_TECH,CLEAR_CURRENT_TECH,SET_CURRENT_TECH,SEARCH_TECHS} from \"./types\";\nimport M from 'materialize-css/dist/js/materialize'\nconst JSON_API = 'https://my-json-server.typicode.com/alexg-93/logsdb/'\n\n// Get techs from server\nexport const getTechs = () => async dispatch => {\n\n    try {\n        setLoading();\n        \n        const res = await fetch(`${JSON_API}/techs`);\n        const data = await res.json();\n\n        dispatch({\n            type:GET_TECHS,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n\n};\n\n\n//Add new log to db\nexport const addTech = (tech) => async dispatch=>{\n\n    try {\n\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/techs` , {\n            method: 'POST',\n            body: JSON.stringify(tech),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n        \n        dispatch({\n            type:ADD_TECH,\n            payload: data\n        })\n    } catch (err) {\n        console.log(err)\n        console.log(err.response.data)\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n\n}\n\n//Delete logs from server db\nexport const deleteTech = (id) => async dispatch=>{\n \n    try {\n\n        setLoading(); //true\n    \n        await fetch(`${JSON_API}/techs/${id}`,{\n            method: 'DELETE'\n        });\n     \n        dispatch({\n            type:DELETE_TECH,\n            payload: id\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n\n}\n\n//Update tech on server\nexport const updateTech = (tech) => async dispatch=>{\n \n    try {\n\n        setLoading(); //true\n    \n        const res = await fetch(`${JSON_API}/techs/${tech.id}`,{\n            method: 'PATCH',\n            body: JSON.stringify(tech),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const data = await res.json();\n      \n\n        dispatch({\n            type:UPDATE_TECH,\n            payload: data\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.data\n        })\n    }\n   \n\n}\n\n//Set loading to true\nexport const setLoading = () => {\n    return {\n        type:SET_LOADING\n    }\n };\n\n\n// Set current tech\nexport const setCurrentTech = (tech) => {\n    return {\n        type:SET_CURRENT_TECH,\n        payload: tech\n    }\n  }\n  \n  // clear current tech\n  export const clearCurrentTech = () => {\n      return {\n          type:CLEAR_CURRENT_TECH,\n          payload: null\n      }\n    }\n    \n  \n  \n// search techs from server\nexport const searchTechs = (text) => async dispatch => {\n\n    try {\n        setLoading();\n\n        const res = await fetch(`${JSON_API}/techs?q=${text}`);\n        const data = await res.json();\n      \n        dispatch({\n            type:SEARCH_TECHS,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.data\n        })\n    }\n   \n    \n};\n\n\n// Set current tech\nexport const setCurrenTech = (tech) => {\n  return {\n      type:SET_CURRENT_TECH,\n      payload: tech\n  }\n}\n\n// clear current tech\nexport const clearCurrentLog = () => {\n    return {\n        type:CLEAR_CURRENT_TECH,\n        payload: null\n    }\n  }\n  \n\n\n\n\n\n","/Users/alex/Documents/web/react/it-logger/src/components/techs/TechSelectOptions.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/techs/EditTechModal.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/techs/techCard.js",["140","141","142","143"],"/Users/alex/Documents/web/react/it-logger/src/components/techs/TechCard.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/layout/SideNav.js",["144","145","146","147","148"],"import React,{useEffect} from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\n\n\nconst SideNav = () => {\n\n \n  \n//   const handleCloseNav = () => {\n//     let sidenav = document.querySelector(\"#slide-out\");\n//     let instance = M.Sidenav.getInstance(sidenav);\n//     instance.close();\n \n   \n   \n//   };\n\n//   const handleOpenNav = () => {\n//     let sidenav = document.querySelector(\"#slide-out\");\n//     let instance = M.Sidenav.getInstance(sidenav);\n//     instance.open();\n   \n//   }\n\n  return (\n\n   <>\n     <div>\n     <ul\n        id=\"nav-mobile\"\n        className=\"sidenav sidenav-fixed\"\n\n      >\n        <li>\n        <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <div className=\"divider\"></div>\n        </li>\n\n        <li>\n          <a href=\"#!\" className=\"subheader\">\n            Logs Section\n          </a>\n        </li>\n\n        <li>\n          <Link to=\"/completedlogs\">Completed logs</Link>\n        </li>\n        \n        <li>\n          <div className=\"divider\"></div>\n        </li>\n        <li>\n          <a href=\"#!\" className=\"subheader\">\n            Techs Section\n          </a>\n        </li>\n        <li>\n          <Link to=\"/techs\">\n            Techs\n          </Link>\n        </li>\n      </ul>\n     </div>\n    </>\n       \n  \n\n\n\n  );\n};\n\nexport default SideNav;\n","/Users/alex/Documents/web/react/it-logger/src/pages/Home.js",[],"/Users/alex/Documents/web/react/it-logger/src/pages/CompletedLogs.js",[],"/Users/alex/Documents/web/react/it-logger/src/components/layout/MobileNav.js",["149","150","151","152"],"import React from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\nconst MobileNav = () => {\n\n\n    // const handleCloseNav = () => {\n    //     let sidenav = document.querySelector(\"#mobile-demo\")\n    //     let instance = M.Sidenav.getInstance(sidenav);\n    //     instance.close();\n      \n    // }\n    \n    \n    \n\n    return (\n     <div>\n        \n    <nav className=\"nav-extended hide-on-large-only\">\n    <div className=\"nav-wrapper blue\">\n     \n      \n      <ul id=\"nav-mobile\" className=\"\" style={{display:'flex',justifyContent:'center'}}>\n        <li><Link to=\"/\">Home</Link></li>  \n        <li><Link to=\"/completedlogs\">Completed logs</Link></li>\n        <li><Link to=\"/techs\">Techs</Link></li>\n      </ul>\n    </div>\n \n  </nav>\n\n \n  {/* <ul className=\"sidenav\" id=\"mobile-demo\">\n    <li><a href=\"/\">Home</a></li>\n    <li><a href=\"/completedlogs\">Completed logs</a></li>\n    <li><a href=\"/team\">Team</a></li>\n  </ul>  */}\n\n\n\n \n</div>\n    )\n}\n\nexport default MobileNav\n","/Users/alex/Documents/web/react/it-logger/src/components/logs/CompletedLogs.js",["153"],"import React, {useEffect } from \"react\";\nimport CompletedLogItem from './CompletedLogItem'\nimport PreLoader from '../layout/PreLoader'\nimport  {connect} from 'react-redux'\nimport {getCompletedLogs} from '../../redux/actions/logActions'\n\nconst CompletedLogs = ({log:{completedlogs,loading},getCompletedLogs}) => {\n\n \n  useEffect(() => {\n    getCompletedLogs();\n  }, []);\n\n  \n\n  if (loading || completedlogs ===null){\n    return <PreLoader/>;\n  }\n\n  return (\n    <ul className=\"collection with-header\" style={{display:'grid',top:'30px',width:450,margin:'auto'}}>\n    <li className=\"collection-header\">\n      <h4 className=\"center\">Completed logs</h4>\n       \n    </li>\n       {!loading && completedlogs.length === 0 ? <p className=\"center\">No logs to show..</p>\n       :\n       completedlogs.map( log => (\n          \n        <CompletedLogItem key={log.id} log={log}/>\n       )\n        \n       \n       )\n\n       }\n    </ul>\n  );\n};\n\n\nconst mapStateToProps = state =>({\n  log: state.log,\n})\n\nexport default connect(mapStateToProps,{\n  getCompletedLogs\n})(CompletedLogs);\n","/Users/alex/Documents/web/react/it-logger/src/components/logs/CompletedLogItem.js",["154"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\nimport {connect} from 'react-redux'\n\nimport M from 'materialize-css/dist/js/materialize'\n\n\nconst CompletedLogItem = ({log}) => {\n\n   \n   \n    // const {id,message,tech,date} = log;\n\n   \n    return (\n       <li className=\"collection-item\">\n            <div className=\"center\">\n                <a href=\"#!\" className={`modal-trigger ${log&&log.attention ? 'red-text' : 'blue-text'}`}>{log&&log.message}</a>\n                <br/>\n                <span className=\"grey-text\">\n                    <span className=\"black-text\">ID #{log&&log.id} </span>\n                    completed by {\" \"}\n                    <span className=\"black-text\">{log&&log.tech}</span> \n                   <br/> {\" \"} <span style={{marginLeft:5}}>on</span> {\" \"} \n                     <Moment format='MMMM Do YYYY, h:mm:ss a'>{log&&log.date}</Moment>\n                </span>\n\n            </div>\n       </li>\n    )\n}\n\nCompletedLogItem.propTypes = {\n    log: PropTypes.object.isRequired,  \n}\n\nconst mapStateToProps = state =>({\n    current:state.log\n  })\n\nexport default connect(mapStateToProps,{})(CompletedLogItem)\n","/Users/alex/Documents/web/react/it-logger/src/pages/Techs.js",["155"],"import React, { useEffect } from \"react\";\nimport SideNav from \"../components/layout/SideNav\";\nimport MobileNav from \"../components/layout/MobileNav\";\nimport { connect } from \"react-redux\";\nimport { getTechs } from \"../redux/actions/techActions\";\n\nconst Techs = ({ tech: { techs, loading }, getTechs }) => {\n  useEffect(() => {\n    getTechs();\n  }, []);\n\n  return (\n    <>\n      <div>\n        <SideNav />\n        <MobileNav />\n        {\n        <div >\n          <h4 className=\"center\">Techs list</h4>\n           <div style={{display:'grid'}}>\n              {(!loading && techs === null) || techs.length === 0 ? (\n              <p className=\"center\">No techs to show..</p>\n             ) : (\n                techs.map((tech) => (\n                 <div\n                className=\"card\"\n                   style={{ width: 350, margin: \"auto\",marginTop:15,marginBottom:15 }}\n                >\n                   <div\n                    className=\"card-image waves-effect waves-block waves-light\"\n                    style={{\n                       margin: \"auto\",\n                        top: \"15px\",\n                       width: \"200px\",\n                       height: \"200px\",\n                       border: \"2px solid\",\n                       borderRadius: \"50%\",\n                      }}\n                   >\n                     <img  src={\n                         \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTw92ToLJnjnUmsEbTRFStNtKCD-PJBRbnqYg&usqp=CAU\"\n                      }\n                     alt=\"ProfilePic\"\n                    />\n                   </div>\n                   <div className=\"card-content\">\n                     <ul className=\"collection\">\n                        <li className=\"collection-item\">\n                          Name : {tech.firstName}{\" \"} {tech.lastName}\n                       </li>\n                        <li className=\"collection-item\">\n                          Department : {tech !== null && tech.department}\n                       </li>\n                       <li className=\"collection-item\">\n                          Working since : {tech !== null && tech.date}\n                        </li>\n                    </ul>\n                  </div>\n                  </div>\n                ))\n             )}\n          \n          </div>\n          </div>\n     }\n        \n      </div>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(Techs);\n\n\n// <div class=\"row\">\n\n// <div class=\"col s12 m4 l3\"> \n\n//     <SideNav />\n// </div>\n\n// <div class=\"col s12 m8 l9\"> \n// {\n//           <div >\n//             <h4 className=\"center\">Techs list</h4>\n//             <ul className=\"collection\" style={{display:'grid'}}>\n//               {(!loading && techs === null) || techs.length === 0 ? (\n//                 <p className=\"center\">No techs to show..</p>\n//               ) : (\n//                 techs.map((tech) => (\n//                   <div\n//                     className=\"card center\"\n//                     style={{ width: 300, margin: \"auto\" }}\n//                   >\n//                     <div\n//                       className=\"card-image waves-effect waves-block waves-light\"\n//                       style={{\n//                         margin: \"auto\",\n//                         top: \"15px\",\n//                         width: \"200px\",\n//                         height: \"200px\",\n//                         border: \"2px solid\",\n//                         borderRadius: \"50%\",\n//                       }}\n//                     >\n//                       <img\n//                         src={\n//                           \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTw92ToLJnjnUmsEbTRFStNtKCD-PJBRbnqYg&usqp=CAU\"\n//                         }\n//                         className=\"activator\"\n//                         alt=\"ProfilePic\"\n//                       />\n//                     </div>\n//                     <div className=\"card-content\">\n//                       <ul className=\"collection\">\n//                         <li className=\"collection-item\">\n//                           Name : {tech !== null && tech.firstName}{\" \"}\n//                           {tech == null && tech.lastName}\n//                         </li>\n//                         <li className=\"collection-item\">\n//                           Department : {tech !== null && tech.department}\n//                         </li>\n//                         <li className=\"collection-item\">\n//                           Working since : {tech !== null && tech.date}\n//                         </li>\n//                       </ul>\n//                     </div>\n//                   </div>\n//                 ))\n//               )}\n//             </ul>\n//           </div>\n//         }\n\n// </div>\n\n// </div>",{"ruleId":"156","severity":1,"message":"157","line":18,"column":3,"nodeType":"158","messageId":"159","endLine":18,"endColumn":7},{"ruleId":"156","severity":1,"message":"160","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":12,"column":6,"nodeType":"163","endLine":12,"endColumn":8,"suggestions":"164"},{"ruleId":"156","severity":1,"message":"165","line":8,"column":16,"nodeType":"158","messageId":"159","endLine":8,"endColumn":22},{"ruleId":"161","severity":1,"message":"166","line":12,"column":6,"nodeType":"163","endLine":12,"endColumn":8,"suggestions":"167"},{"ruleId":"156","severity":1,"message":"168","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":9},{"ruleId":"156","severity":1,"message":"168","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":9},{"ruleId":"156","severity":1,"message":"169","line":5,"column":7,"nodeType":"158","messageId":"159","endLine":5,"endColumn":15},{"ruleId":"161","severity":1,"message":"170","line":9,"column":7,"nodeType":"163","endLine":9,"endColumn":9,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"172","line":57,"column":7,"nodeType":"158","messageId":"159","endLine":57,"endColumn":22},{"ruleId":"173","severity":2,"message":"174","line":61,"column":47,"nodeType":"158","messageId":"175","endLine":61,"endColumn":55},{"ruleId":"156","severity":1,"message":"176","line":1,"column":15,"nodeType":"158","messageId":"159","endLine":1,"endColumn":24},{"ruleId":"156","severity":1,"message":"168","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":9},{"ruleId":"156","severity":1,"message":"177","line":4,"column":22,"nodeType":"158","messageId":"159","endLine":4,"endColumn":28},{"ruleId":"156","severity":1,"message":"178","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":5,"endColumn":11},{"ruleId":"156","severity":1,"message":"179","line":6,"column":5,"nodeType":"158","messageId":"159","endLine":6,"endColumn":10},{"ruleId":"156","severity":1,"message":"168","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":9},{"ruleId":"156","severity":1,"message":"177","line":4,"column":22,"nodeType":"158","messageId":"159","endLine":4,"endColumn":28},{"ruleId":"156","severity":1,"message":"178","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":5,"endColumn":11},{"ruleId":"156","severity":1,"message":"179","line":6,"column":5,"nodeType":"158","messageId":"159","endLine":6,"endColumn":10},{"ruleId":"161","severity":1,"message":"180","line":12,"column":6,"nodeType":"163","endLine":12,"endColumn":8,"suggestions":"181"},{"ruleId":"156","severity":1,"message":"168","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":9},{"ruleId":"161","severity":1,"message":"166","line":10,"column":6,"nodeType":"163","endLine":10,"endColumn":8,"suggestions":"182"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLogs'. Either include it or remove the dependency array. If 'getLogs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["183"],"'uuidv4' is defined but never used.","React Hook useEffect has a missing dependency: 'getTechs'. Either include it or remove the dependency array. If 'getTechs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["184"],"'M' is defined but never used.","'TechCard' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCurrentTech' and 'tech'. Either include them or remove the dependency array. If 'setCurrentTech' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"'mapStateToProps' is assigned a value but never used.","no-undef","'techCard' is not defined.","undef","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has a missing dependency: 'getCompletedLogs'. Either include it or remove the dependency array. If 'getCompletedLogs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["186"],["187"],{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"190","fix":"196"},"Update the dependencies array to be: [getLogs]",{"range":"197","text":"198"},"Update the dependencies array to be: [getTechs]",{"range":"199","text":"200"},"Update the dependencies array to be: [setCurrentTech, tech]",{"range":"201","text":"202"},"Update the dependencies array to be: [getCompletedLogs]",{"range":"203","text":"204"},{"range":"205","text":"200"},[313,315],"[getLogs]",[406,408],"[getTechs]",[250,252],"[setCurrentTech, tech]",[365,367],"[getCompletedLogs]",[348,350]]