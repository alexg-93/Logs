{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG } from \"./types\"; // Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Add new log to db\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Delete logs from server db\n\nexport const deleteLog = id => async dispatch => {\n  console.log(id);\n\n  try {\n    setLoading(); //true\n\n    console.log('log deleted id=', id);\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Set current\n//Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/redux/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLog","log","method","body","JSON","stringify","headers","deleteLog","id","console"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA8CC,OAA9C,EAAsDC,UAAtD,QAAuE,SAAvE,C,CAGA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAE3C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACZ,QADA;AAELa,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOI,GAAP,EAAY;AACXR,IAAAA,QAAQ,CAAC;AACJM,MAAAA,IAAI,EAAEV,UADF;AAEJW,MAAAA,OAAO,EAACC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIF;AAGJ,CApBM,C,CAsBP;;AACA,OAAO,MAAMM,MAAM,GAAIC,GAAD,IAAS,MAAMX,QAAN,IAAgB;AAE3C,MAAI;AAEAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,EAAW;AAC9BS,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAFwB;AAG9BK,MAAAA,OAAO,EAAG;AACN,wBAAgB;AADV;AAHoB,KAAX,CAAvB;AAOA,UAAMZ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACT,OADA;AAELU,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAjBD,CAiBE,OAAOI,GAAP,EAAY;AACXR,IAAAA,QAAQ,CAAC;AACJM,MAAAA,IAAI,EAAEV,UADF;AAEJW,MAAAA,OAAO,EAACC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIF;AAGJ,CA3BM,C,CA6BP;;AACA,OAAO,MAAMa,SAAS,GAAIC,EAAD,IAAQ,MAAMlB,QAAN,IAAgB;AAC7CmB,EAAAA,OAAO,CAACR,GAAR,CAAYO,EAAZ;;AACA,MAAI;AAEAjB,IAAAA,UAAU,GAFV,CAEc;;AACdkB,IAAAA,OAAO,CAACR,GAAR,CAAY,iBAAZ,EAA8BO,EAA9B;AAEA,UAAMf,KAAK,CAAE,SAAQe,EAAG,EAAb,EAAe;AACtBN,MAAAA,MAAM,EAAE;AADc,KAAf,CAAX;AAIAZ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACR,UADA;AAELS,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR;AAKH,GAdD,CAcE,OAAOV,GAAP,EAAY;AACXR,IAAAA,QAAQ,CAAC;AACJM,MAAAA,IAAI,EAAEV,UADF;AAEJW,MAAAA,OAAO,EAACC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIF;AAGJ,CAxBM,C,CA0BP;AAKA;;AACA,OAAO,MAAMH,UAAU,GAAG,MAAM;AAC7B,SAAO;AACHK,IAAAA,IAAI,EAACX;AADF,GAAP;AAGF,CAJM","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR  , ADD_LOG,DELETE_LOG} from \"./types\";\n\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n\n    try {\n        setLoading();\n\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        dispatch({\n            type:GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.data\n        })\n    }\n   \n    \n};\n\n//Add new log to db\nexport const addLog = (log) => async dispatch=>{\n\n    try {\n\n        setLoading();\n\n        const res = await fetch('/logs' , {\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n\n        dispatch({\n            type:ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.data\n        })\n    }\n   \n\n}\n\n//Delete logs from server db\nexport const deleteLog = (id) => async dispatch=>{\n    console.log(id)\n    try {\n\n        setLoading(); //true\n        console.log('log deleted id=',id)\n\n        await fetch(`/logs/${id}`,{\n            method: 'DELETE'\n        });\n     \n        dispatch({\n            type:DELETE_LOG,\n            payload: id\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: LOGS_ERROR,\n            payload:err.response.data\n        })\n    }\n   \n\n}\n\n// Set current\n\n\n\n\n//Set loading to true\nexport const setLoading = () => {\n   return {\n       type:SET_LOADING\n   }\n};\n"]},"metadata":{},"sourceType":"module"}