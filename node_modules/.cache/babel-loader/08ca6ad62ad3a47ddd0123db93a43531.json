{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG } from \"../actions/types\";\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nconst logReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default logReducer;","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/redux/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","initialState","logs","current","loading","error","logReducer","state","action","type","payload","console"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,OAA5C,QAA2D,kBAA3D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAFR;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,OAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACE,OAAvB,CAFD;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKL,UAAL;AACEY,MAAAA,OAAO,CAACN,KAAR,CAAcG,MAAM,CAACE,OAArB;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAA1B,OAAP;;AAEF;AACE,aAAOH,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,UAAf","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG } from \"../actions/types\";\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nconst logReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default logReducer;\n"]},"metadata":{},"sourceType":"module"}