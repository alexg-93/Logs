{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/it-logger/src/components/logs/AddLogModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport M from 'materialize-css/dist/js/materialize';\nimport { connect } from 'react-redux';\nimport { addLog } from '../../redux/actions/logActions';\nimport { getTechs } from '../../redux/actions/techActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddLogModal = ({\n  addLog,\n  tech: {\n    techs\n  }\n}) => {\n  _s();\n\n  let fullName = '';\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const handleMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const handleTech = e => {\n    setTech(e.target.value);\n  };\n\n  const handleAttention = () => {\n    setAttention(!attention);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please enter a message and tech'\n      });\n    }\n\n    const newLog = {\n      message: message,\n      attention,\n      tech,\n      date: new Date()\n    };\n    addLog(newLog);\n    M.toast({\n      html: `Log added by ${tech}`\n    });\n    setMessage('');\n    setTech(\"\");\n    setAttention(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter System Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"message\",\n            value: message,\n            required: true,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            className: \"active\",\n            children: \"Log Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"browser-default\",\n            name: \"tech\",\n            value: tech,\n            onChange: handleTech,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              selected: true,\n              children: \"Choose Techician\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), techs && techs.map(tech => (fullName = `${tech.firstName}`, /*#__PURE__*/_jsxDEV(\"option\", {\n              value: fullName,\n              children: [tech.firstName, \" \", tech.lastName]\n            }, tech.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"filled-in\",\n                checked: attention,\n                onChange: handleAttention\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Needs Attention\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        onClick: onSubmit,\n        className: !!message ? 'modal-close waves-effect blue btn ' : 'modal-close waves-effect blue btn disabled',\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLogModal, \"nzdYcWI6V3KS0FBIuf0QQDkIN88=\");\n\n_c = AddLogModal;\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  addLog\n})(AddLogModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLogModal\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/components/logs/AddLogModal.js"],"names":["React","useState","M","connect","addLog","getTechs","AddLogModal","tech","techs","fullName","message","setMessage","attention","setAttention","setTech","handleMessage","e","target","value","handleTech","handleAttention","onSubmit","preventDefault","toast","html","newLog","date","Date","modalStyle","map","firstName","lastName","id","width","height","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport M from 'materialize-css/dist/js/materialize'\nimport {connect} from 'react-redux'\nimport {addLog} from '../../redux/actions/logActions'\nimport {getTechs} from '../../redux/actions/techActions'\n\nconst AddLogModal = ({addLog,tech:{techs}}) => {\n\n  let fullName=''\n\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const handleMessage = (e) => {\n    \n    setMessage(e.target.value);\n  };\n\n  const handleTech = (e) => {\n    setTech(e.target.value);\n  };\n\n  const handleAttention = () => {\n    setAttention(!attention);\n  };\n\n  const onSubmit = (e) =>{\n    e.preventDefault();\n      if(message === '' || tech === ''){\n         M.toast({html:'Please enter a message and tech'})\n      }\n\n      const newLog = {\n        message: message,\n        attention,\n        tech,\n        date: new Date()\n      }\n\n      addLog(newLog)\n\n      M.toast({html:`Log added by ${tech}`})\n      \n      setMessage('')\n      setTech(\"\")\n      setAttention(false)\n\n     \n  }\n\n  return (\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              required={true}\n              onChange={handleMessage}\n            />\n            <label htmlFor=\"message\" className=\"active\">\n              Log Message\n            </label>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              className=\"browser-default\"\n              name=\"tech\"\n              value={tech}\n              onChange={handleTech}\n              \n            >\n              <option value=\"\" disabled selected>\n                Choose Techician\n              </option>\n\n              {techs && techs.map(tech=>(\n                fullName=`${tech.firstName}`,\n                <option key={tech.id} value={fullName}>{tech.firstName} {tech.lastName}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  onChange={handleAttention}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n        \n      </div>\n\n \n      <div className=\"modal-footer\">\n          <a href=\"#!\" onClick={onSubmit} className={ !!message ? 'modal-close waves-effect blue btn ' :'modal-close waves-effect blue btn disabled' }>\n              Enter\n          </a>\n      </div>\n\n\n\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nconst mapStateToProps = state =>({\n  tech:state.tech\n})\n\n\nexport default connect(mapStateToProps,{addLog})(AddLogModal);\n"]},"metadata":{},"sourceType":"module"}