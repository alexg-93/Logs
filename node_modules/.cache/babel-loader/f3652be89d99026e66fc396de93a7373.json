{"ast":null,"code":"import { ADD_TECH, GET_TECHS, TECHS_ERROR, DELETE_TECH, SET_LOADING } from \"./types\";\nimport M from 'materialize-css/dist/js/materialize'; // Get techs from server\n\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/techs');\n    const data = await res.json();\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Add new log to db\n\nexport const addTech = tech => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_TECH,\n      payload: data\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err.response.data);\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Delete logs from server db\n\nexport const deleteTech = id => async dispatch => {\n  try {\n    setLoading(); //true\n\n    await fetch(`/techs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Update tech on server\n\nexport const updateTech = tech => async dispatch => {\n  try {\n    setLoading(); //true\n\n    const res = await fetch(`/techs/${tech.id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n    dispatch({\n      type: UPDATE_TECH,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.data\n    });\n  } // }\n  // // Get techs from server\n  // export const searchTechs = (text) => async dispatch => {\n  //     try {\n  //         setLoading();\n  //         const res = await fetch(`/techs?q=${text}`);\n  //         const data = await res.json();\n  //         if(data.length===0){\n  //             M.toast({html:`${text} not found`})\n  //         }\n  //         dispatch({\n  //             type:SEARCH_TECHS,\n  //             payload: data\n  //         })\n  //     } catch (err) {\n  //        dispatch({\n  //             type: TECHS_ERROR,\n  //             payload:err.response.data\n  //         })\n  //     }\n  // };\n  // // Set current tech\n  // export const setCurrenTech = (log) => {\n  //   return {\n  //       type:SET_CURRENT_TECH,\n  //       payload: tech\n  //   }\n  // }\n  // // clear current log\n  // export const clearCurrentLog = () => {\n  //     return {\n  //         type:CLEAR_CURRENT_TECH,\n  //         payload: null\n  //     }\n  //   }\n\n};","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/redux/actions/techActions.js"],"names":["ADD_TECH","GET_TECHS","TECHS_ERROR","DELETE_TECH","SET_LOADING","M","getTechs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addTech","tech","method","body","JSON","stringify","headers","console","log","deleteTech","id","updateTech","UPDATE_TECH"],"mappings":"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","sourcesContent":["import {ADD_TECH,GET_TECHS,TECHS_ERROR,DELETE_TECH,SET_LOADING} from \"./types\";\nimport M from 'materialize-css/dist/js/materialize'\n\n\n// Get techs from server\nexport const getTechs = () => async dispatch => {\n\n    try {\n        setLoading();\n        \n        const res = await fetch('/techs');\n        const data = await res.json();\n\n        dispatch({\n            type:GET_TECHS,\n            payload: data\n        })\n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n\n};\n\n\n//Add new log to db\nexport const addTech = (tech) => async dispatch=>{\n\n    try {\n\n        setLoading();\n\n        const res = await fetch('/techs' , {\n            method: 'POST',\n            body: JSON.stringify(tech),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n        \n        dispatch({\n            type:ADD_TECH,\n            payload: data\n        })\n    } catch (err) {\n        console.log(err)\n        console.log(err.response.data)\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n\n}\n\n//Delete logs from server db\nexport const deleteTech = (id) => async dispatch=>{\n \n    try {\n\n        setLoading(); //true\n    \n        await fetch(`/techs/${id}`,{\n            method: 'DELETE'\n        });\n     \n        dispatch({\n            type:DELETE_TECH,\n            payload: id\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.statusText\n        })\n    }\n   \n\n}\n\n//Update tech on server\nexport const updateTech = (tech) => async dispatch=>{\n \n    try {\n\n        setLoading(); //true\n    \n        const res = await fetch(`/techs/${tech.id}`,{\n            method: 'PATCH',\n            body: JSON.stringify(tech),\n            headers : {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const data = await res.json();\n        console.log(data)\n\n        dispatch({\n            type:UPDATE_TECH,\n            payload: data\n        })\n       \n    } catch (err) {\n       dispatch({\n            type: TECHS_ERROR,\n            payload:err.response.data\n        })\n    }\n   \n\n// }\n\n\n// // Get techs from server\n// export const searchTechs = (text) => async dispatch => {\n\n//     try {\n//         setLoading();\n\n//         const res = await fetch(`/techs?q=${text}`);\n//         const data = await res.json();\n//         if(data.length===0){\n//             M.toast({html:`${text} not found`})\n//         }\n     \n\n//         dispatch({\n//             type:SEARCH_TECHS,\n//             payload: data\n//         })\n//     } catch (err) {\n//        dispatch({\n//             type: TECHS_ERROR,\n//             payload:err.response.data\n//         })\n//     }\n   \n    \n// };\n\n\n// // Set current tech\n// export const setCurrenTech = (log) => {\n//   return {\n//       type:SET_CURRENT_TECH,\n//       payload: tech\n//   }\n// }\n\n// // clear current log\n// export const clearCurrentLog = () => {\n//     return {\n//         type:CLEAR_CURRENT_TECH,\n//         payload: null\n//     }\n//   }\n  \n\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}