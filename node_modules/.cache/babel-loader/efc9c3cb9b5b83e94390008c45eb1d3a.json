{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/it-logger/src/components/logs/Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\nimport { connect } from 'react-redux';\nimport { getLogs } from '../../redux/actions/logActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  _s();\n\n  useEffect(() => {\n    getLogs();\n  }, []);\n\n  if (loading || logs === null) {\n    return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    style: {\n      display: 'grid',\n      marginLeft: '50px',\n      width: '400px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"System Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No logs to show..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Logs;\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/components/logs/Logs.js"],"names":["React","useState","useEffect","LogItem","PreLoader","connect","getLogs","Logs","log","logs","loading","display","marginLeft","width","margin","length","map","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,gCAAtB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAG,EAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAL;AAAoBJ,EAAAA;AAApB,CAAD,KAAkC;AAAA;;AAG7CJ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAMA,MAAII,OAAO,IAAID,IAAI,KAAI,IAAvB,EAA4B;AAC1B,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAuC,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAC,MAAT;AAAgBC,MAAAA,UAAU,EAAC,MAA3B;AAAkCC,MAAAA,KAAK,EAAC,OAAxC;AAAgDC,MAAAA,MAAM,EAAC;AAAvD,KAA9C;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAII,CAACJ,OAAD,IAAYD,IAAI,CAACM,MAAL,KAAgB,CAA5B,gBAAgC;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhC,GAEDN,IAAI,CAACO,GAAL,CAAUR,GAAG,iBAEZ,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACS,EAAlB;AAAA;AAAA;AAAA;AAAA,YAFD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/BD;;GAAMV,I;;KAAAA,I;;AAkCN,MAAMW,eAAe,GAAGC,KAAK,KAAI;AAC/BX,EAAAA,GAAG,EAAEW,KAAK,CAACX;AADoB,CAAJ,CAA7B;;AAIA,eAAeH,OAAO,CAACa,eAAD,EAAiB;AACrCZ,EAAAA;AADqC,CAAjB,CAAP,CAEZC,IAFY,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LogItem from './LogItem'\nimport PreLoader from '../layout/PreLoader'\nimport  {connect} from 'react-redux'\nimport {getLogs} from '../../redux/actions/logActions'\n\nconst Logs = ({log:{logs,loading},getLogs}) => {\n\n \n  useEffect(() => {\n    getLogs();\n  }, []);\n\n  \n\n  if (loading || logs ===null){\n    return <PreLoader/>;\n  }\n\n  return (\n    <ul className=\"collection with-header\" style={{display:'grid',marginLeft:'50px',width:'400px',margin:'auto'}}>\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n       {!loading && logs.length === 0 ? <p className=\"center\">No logs to show..</p>\n       :\n       logs.map( log => (\n          \n        <LogItem key={log.id} log={log}/>\n       )\n        \n       \n       )\n\n       }\n    </ul>\n  );\n};\n\n\nconst mapStateToProps = state =>({\n  log: state.log,\n})\n\nexport default connect(mapStateToProps,{\n  getLogs\n})(Logs);\n"]},"metadata":{},"sourceType":"module"}