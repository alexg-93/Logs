{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/it-logger/src/components/logs/Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getLogs();\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    style: {\n      width: ''\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"System Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No logs to show..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logs, \"ZGhkABdExOczY9obwOnN8RHRH3E=\");\n\n_c = Logs;\nexport default Logs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/components/logs/Logs.js"],"names":["React","useState","useEffect","LogItem","PreLoader","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","width","length","map","log","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AAC1BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;;AAQA,MAAID,OAAJ,EAAY;AACV,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAuC,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAC;AAAP,KAA9C;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAII,CAACP,OAAD,IAAYF,IAAI,CAACU,MAAL,KAAgB,CAA5B,gBAAgC;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhC,GAEDV,IAAI,CAACW,GAAL,CAAUC,GAAG,iBAEZ,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,YAFD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtCD;;GAAMd,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LogItem from './LogItem'\nimport PreLoader from '../layout/PreLoader'\n\nconst Logs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getLogs();\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading){\n    return <PreLoader/>;\n  }\n\n  return (\n    <ul className=\"collection with-header\" style={{width:''}}>\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n       {!loading && logs.length === 0 ? <p className=\"center\">No logs to show..</p>\n       :\n       logs.map( log => (\n          \n        <LogItem key={log.id} log={log}/>\n       )\n        \n       \n       )\n\n       }\n    </ul>\n  );\n};\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}