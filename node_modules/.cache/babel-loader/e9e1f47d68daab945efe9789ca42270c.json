{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/it-logger/src/components/techs/TechSelectOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getTechs } from \"../../redux/actions/techActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TechSelectOptions = ({\n  tech: {\n    techs,\n    loading\n  },\n  getTechs\n}) => {\n  _s();\n\n  useEffect(() => {\n    getTechs(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return !loading && techs !== null && techs.map(tech => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: `${tech.firstName} ${tech.lastName}`,\n    children: [tech.firstName, \" \", tech.lastName]\n  }, tech.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this));\n};\n\n_s(TechSelectOptions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TechSelectOptions;\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"TechSelectOptions\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/components/techs/TechSelectOptions.js"],"names":["React","useEffect","connect","PropTypes","getTechs","TechSelectOptions","tech","techs","loading","map","firstName","lastName","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iCAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR;AAA4BJ,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AAElEH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,GADI,CAEhB;AACC,GAHQ,EAGP,EAHO,CAAT;AAMA,SACA,CAACI,OAAD,IACAD,KAAK,KAAK,IADV,IAEAA,KAAK,CAACE,GAAN,CAAWH,IAAD,iBACR;AAAsB,IAAA,KAAK,EAAG,GAAEA,IAAI,CAACI,SAAU,IAAGJ,IAAI,CAACK,QAAS,EAAhE;AAAA,eACGL,IAAI,CAACI,SADR,OACoBJ,IAAI,CAACK,QADzB;AAAA,KAAaL,IAAI,CAACM,EAAlB;AAAA;AAAA;AAAA;AAAA,UADF,CAHA;AAWH,CAnBD;;GAAMP,iB;;KAAAA,iB;AAqBNA,iBAAiB,CAACQ,SAAlB,GAA8B;AAC1BP,EAAAA,IAAI,EAACH,SAAS,CAACW,MAAV,CAAiBC,UADI;AAE1BX,EAAAA,QAAQ,EAAED,SAAS,CAACa,IAAV,CAAeD;AAFC,CAA9B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC7BZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADiB,CAAJ,CAA7B;;AAKA,eAAeJ,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,iBAAvC,CAAf","sourcesContent":["import React,{useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getTechs } from \"../../redux/actions/techActions\";\n\nconst TechSelectOptions = ({ tech: { techs, loading }, getTechs }) => {\n  \n    useEffect(() => {\n        getTechs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n  \n  \n    return (\n    !loading &&\n    techs !== null &&\n    techs.map((tech) => (\n      <option key={tech.id} value={`${tech.firstName} ${tech.lastName}`}>\n        {tech.firstName} {tech.lastName}\n      </option>\n    ))\n  );\n\n  \n};\n\nTechSelectOptions.propTypes = {\n    tech:PropTypes.object.isRequired,\n    getTechs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state =>({\n    tech: state.tech,\n  })\n  \n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n"]},"metadata":{},"sourceType":"module"}