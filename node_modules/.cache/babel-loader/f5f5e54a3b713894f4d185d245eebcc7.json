{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG } from \"../actions/types\";\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nconst logReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n\n    case DELETE_LOG:\n      return { ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAF_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default logReducer;","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/redux/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","initialState","logs","current","loading","error","logReducer","state","action","type","payload","filter","log","id","CLEAF_CURRENT","console"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,OAA5C,EAAqDC,UAArD,EAAiEC,WAAjE,EAA6EC,aAA7E,EAA2FC,UAA3F,QAA6G,kBAA7G;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAFR;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACE,OAAvB,CAFD;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,UAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWS,MAAX,CAAkBC,GAAG,IAAEA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAAzC,CAFH;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKN,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,OAAO,EAACK,MAAM,CAACE;AAFZ,OAAP;;AAIP,SAAKI,aAAL;AACW,aAAO,EACH,GAAGP,KADA;AAEHJ,QAAAA,OAAO,EAACK,MAAM,CAACE;AAFZ,OAAP;;AAIR,SAAKhB,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKT,UAAL;AACEoB,MAAAA,OAAO,CAACV,KAAR,CAAcG,MAAM,CAACE,OAArB;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAA1B,OAAP;;AAEF;AACE,aAAOH,KAAP;AAxCJ;AA0CD,CA3CD;;AA6CA,eAAeD,UAAf","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG ,SET_CURRENT,CLEAR_CURRENT,UPDATE_LOG } from \"../actions/types\";\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nconst logReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n    case DELETE_LOG:\n        return {\n            ...state,\n            logs: state.logs.filter(log=>log.id !== action.payload),\n            loading: false\n        }\n\n    case SET_CURRENT:\n        return {\n            ...state,\n            current:action.payload\n        }\n case CLEAF_CURRENT:\n            return {\n                ...state,\n                current:action.payload\n            }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default logReducer;\n"]},"metadata":{},"sourceType":"module"}