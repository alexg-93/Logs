{"ast":null,"code":"import { GET_TECHS, TECHS_ERROR, DELETE_TECH, ADD_TECH, SET_LOADING, UPDATE_TECH, SET_CURRENT_TECH, CLEAR_CURRENT_TECH, SEA } from \"../actions/types\";\nconst initialState = {\n  techs: null,\n  error: null,\n  current: null,\n  loading: false\n};\n\nconst techReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return { ...state,\n        techs: action.payload,\n        loading: false\n      };\n\n    case ADD_TECH:\n      return { ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n\n    case DELETE_TECH:\n      return { ...state,\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      };\n\n    case TECHS_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case UPDATE_TECH:\n      return { ...state,\n        techs: state.techs.map(tech => tech.id === action.payload.id ? action.payload : tech),\n        current: null\n      };\n\n    case SET_CURRENT_TECH:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT_TECH:\n      return { ...state,\n        current: action.payload\n      };\n\n    case SEARCH_TECHS:\n      return { ...state,\n        logs: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default techReducer;","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/redux/reducers/techReducer.js"],"names":["GET_TECHS","TECHS_ERROR","DELETE_TECH","ADD_TECH","SET_LOADING","UPDATE_TECH","SET_CURRENT_TECH","CLEAR_CURRENT_TECH","SEA","initialState","techs","error","current","loading","techReducer","state","action","type","payload","filter","tech","id","map","SEARCH_TECHS","logs"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,gBAPF,EAQEC,kBARF,EASEC,GATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAFT;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACE,OAAxB,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAhD,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKZ,WAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAA1B,OAAP;;AACF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYY,GAAZ,CAAiBF,IAAD,IACrBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAA3B,GAAgCL,MAAM,CAACE,OAAvC,GAAiDE,IAD5C,CAFF;AAKLR,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKX,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAKF,SAAKK,YAAL;AACI,aAAO,EAAE,GAAGR,KAAL;AAAYS,QAAAA,IAAI,EAAER,MAAM,CAACE;AAAzB,OAAP;;AAIJ;AACE,aAAOH,KAAP;AAnDJ;AAqDD,CAtDD;;AAwDA,eAAeD,WAAf","sourcesContent":["import {\n  GET_TECHS,\n  TECHS_ERROR,\n  DELETE_TECH,\n  ADD_TECH,\n  SET_LOADING,\n  UPDATE_TECH,\n  SET_CURRENT_TECH,\n  CLEAR_CURRENT_TECH,\n  SEA\n} from \"../actions/types\";\n\nconst initialState = {\n  techs: null,\n  error: null,\n  current: null,\n  loading: false,\n};\n\nconst techReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false,\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false,\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\n        loading: false,\n      };\n    case TECHS_ERROR:\n      return { ...state, error: action.payload };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case UPDATE_TECH:\n      return {\n        ...state,\n        techs: state.techs.map((tech) =>\n          tech.id === action.payload.id ? action.payload : tech\n        ),\n        current: null,\n      };\n    case SET_CURRENT_TECH:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT_TECH:\n      return {\n        ...state,\n        current: action.payload,\n      };\n\n    case SEARCH_TECHS:\n        return { ...state, logs: action.payload };\n\n   \n\n    default:\n      return state;\n  }\n};\n\nexport default techReducer;\n"]},"metadata":{},"sourceType":"module"}