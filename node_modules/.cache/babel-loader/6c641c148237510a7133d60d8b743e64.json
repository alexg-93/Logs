{"ast":null,"code":"import { GET_TECHS, TECHS_ERROR, DELETE_TECH, ADD_TECH, SET_LOADING, UPDATE_TECH, SET_CURRENT, CLEAR_CURRENT } from '../actions/types';\nconst initialState = {\n  techs: null,\n  error: null,\n  current: null,\n  loading: false\n};\n\nconst techReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return { ...state,\n        techs: action.payload,\n        loading: false\n      };\n\n    case ADD_TECH:\n      return { ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n\n    case DELETE_TECH:\n      return { ...state,\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      };\n\n    case TECHS_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default techReducer;","map":{"version":3,"sources":["/Users/alex/Documents/web/react/it-logger/src/redux/reducers/techReducer.js"],"names":["GET_TECHS","TECHS_ERROR","DELETE_TECH","ADD_TECH","SET_LOADING","UPDATE_TECH","SET_CURRENT","CLEAR_CURRENT","initialState","techs","error","current","loading","techReducer","state","action","type","payload","filter","tech","id"],"mappings":"AAAA,SACIA,SADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,WAPJ,EAQIC,aARJ,QASO,kBATP;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,OAAO,EAAC;AAJS,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACN,YAAP,EAAoBO,MAApB,KAA8B;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACG,SAAKhB,SAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAFX;AAGHL,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,KAAK,EAAC,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAgBM,MAAM,CAACE,OAAvB,CAFH;AAGHL,QAAAA,OAAO,EAAC;AAHL,OAAP;;AAKJ,SAAKV,WAAL;AACM,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAhD,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKL,SAAKX,WAAL;AACC,aAAO,EAAE,GAAGa,KAAL;AACEJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AADhB,OAAP;;AAGA,SAAKb,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHF,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAOR;AACG,aAAOE,KAAP;AAhCJ;AAkCF,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import {\n    GET_TECHS,\n    TECHS_ERROR,\n    DELETE_TECH,\n    ADD_TECH,\n    SET_LOADING,\n    UPDATE_TECH,\n    SET_CURRENT,\n    CLEAR_CURRENT\n} from '../actions/types';\n\n\nconst initialState = {\n    techs: null,\n    error: null,\n    current: null,\n    loading:false\n}\n\nconst techReducer = (state=initialState,action) =>{\n   switch(action.type){\n      case GET_TECHS :\n          return {\n              ...state,\n              techs: action.payload,\n              loading:false\n          }\n      case ADD_TECH:\n          return {\n              ...state,\n              techs:[...state.techs,action.payload],\n              loading:false\n          }\n      case DELETE_TECH:\n            return {\n              ...state,\n              techs: state.techs.filter((tech) => tech.id !== action.payload),\n              loading: false,\n            };\n       case TECHS_ERROR:\n        return { ...state,\n                 error: action.payload\n             };\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n\n\n    default :\n       return state;\n   }\n}\n\nexport default techReducer;"]},"metadata":{},"sourceType":"module"}